name: WeatherForecast CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build & Test (WeatherForecast)
    runs-on: macos-latest

    steps:
    # 1Ô∏è‚É£ Checkout Repository
    - name: Checkout Source Code
      uses: actions/checkout@v4
      with:
        ref: main

    # 2Ô∏è‚É£ Setup Xcode
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'

    # 3Ô∏è‚É£ Cache Derived Data
    - name: Cache Derived Data
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: derived-data-${{ runner.os }}-${{ hashFiles('**/*.xcodeproj') }}
        restore-keys: |
          derived-data-${{ runner.os }}-
          
    # 4Ô∏è‚É£ Build and Test with Coverage
    - name: Build and Test with Coverage
        run: |
          xcodebuild test \
            -scheme "WeatherForecast" \
            -project WeatherForecast.xcodeproj \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            -enableCodeCoverage YES
            
    # 5Ô∏è‚É£ Extract Coverage Report
    - name: Extract Coverage Report
        run: |
          xcrun xccov view --report --json $(find ~/Library/Developer/Xcode/DerivedData -name "*.xcresult" | head -1) > coverage.json

    # 6Ô∏è‚É£ Upload Coverage Artifact
    - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.json

    # 7Ô∏è‚É£ Install SwiftLint
    - name: Install SwiftLint
      run: |
        brew install swiftlint || true

    # 8Ô∏è‚É£ Run SwiftLint (Static Code Analysis)
    - name: Run Static Code Analysis
      run: swiftlint lint --quiet

    # 9Ô∏è‚É£ Build and Run Unit Tests (TDD)
    - name: Run Unit Tests (WeatherForecastTests)
      run: |
        xcodebuild clean test \
          -project WeatherForecast.xcodeproj \
          -scheme "WeatherForecast" \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          -enableCodeCoverage YES \
          -only-testing:WeatherForecastTests \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

    # üîü Archive Build (for release validation)
    - name: Archive Build
      if: github.ref == 'refs/heads/main'
      run: |
        xcodebuild clean archive \
          -project WeatherForecast.xcodeproj \
          -scheme "WeatherForecast" \
          -archivePath build/WeatherForecast.xcarchive \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
